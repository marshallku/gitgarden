name: CI

on:
    push:
    pull_request:
        branches:
            - master

env:
    CI: true
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    check-spell:
        name: Check spelling
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: marshallku/actions/analyze/spell@master
    check-format:
        name: Check format of code
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: "22"
                  check-latest: true
                  registry-url: https://registry.npmjs.org/
            - name: Check format
              run: npx prettier . --check
    build:
        name: Build project
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions-rust-lang/setup-rust-toolchain@v1
            - name: Setup env
              run: |
                  cp .env.example .env
                  sed -i 's/YOUR_GITHUB_TOKEN/${{ github.token }}/g' .env
            - run: cargo build
    test:
        name: Test project
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions-rust-lang/setup-rust-toolchain@v1
            - name: Setup env
              run: |
                  cp .env.example .env
                  sed -i 's/YOUR_GITHUB_TOKEN/${{ github.token }}/g' .env
            - run: cargo test
    docker:
        name: Deploy image
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions-rust-lang/setup-rust-toolchain@v1
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_number}},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
                  labels: ${{ steps.meta.outputs.labels }}
    send-notification:
        needs: [check-spell, check-format, build, test, docker]
        if: ${{ failure() }}
        uses: marshallku/actions/.github/workflows/send-notification.yml@master
        with:
            failed: ${{ contains(join(needs.*.result, ','), 'failure') }}
            message: "CI job failed - push"
        secrets:
            url: ${{ secrets.DISCORD_WEBHOOK_URI }}
